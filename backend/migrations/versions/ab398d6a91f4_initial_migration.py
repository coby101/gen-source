"""Initial migration

Revision ID: ab398d6a91f4
Revises: 
Create Date: 2025-08-07 15:35:26.662712

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ab398d6a91f4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fact_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=64), nullable=False),
    sa.Column('label', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('source_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=64), nullable=False),
    sa.Column('label', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('individuals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('given_names', sa.String(length=255), nullable=False),
    sa.Column('surname', sa.String(length=255), nullable=False),
    sa.Column('preferred_name', sa.String(length=255), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', 'other', 'unknown', name='gender'), nullable=False),
    sa.Column('birth_date_estimated', sa.Date(), nullable=True),
    sa.Column('death_date_estimated', sa.Date(), nullable=True),
    sa.Column('birth_place', sa.String(length=255), nullable=True),
    sa.Column('death_place', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_living', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('source_collections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_collection_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_collection_id'], ['source_collections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source_type_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('external_url', sa.String(), nullable=True),
    sa.Column('source_text', sa.String(), nullable=True),
    sa.Column('source_date', sa.Date(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('confidence_level', sa.Enum('high', 'medium', 'low', 'questionable', 'certain', 'doubtful', 'speculative', name='confidencelevel'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['source_type_id'], ['source_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('citations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cited_object_id', sa.UUID(), nullable=False),
    sa.Column('cited_object_type', sa.String(length=50), nullable=False),
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('evidence_type', sa.Enum('primary', 'secondary', 'circumstantial', name='evidencetype'), nullable=True),
    sa.Column('source_notes', sa.Text(), nullable=True),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('section_reference', sa.String(), nullable=True),
    sa.Column('supports_claim', sa.Enum('supports', 'contradicts', 'neutral', name='supportsclaim'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('external_links',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('individual_id', sa.UUID(), nullable=False),
    sa.Column('platform', sa.Enum('ancestry', 'myheritage', 'familysearch', 'findmypast', 'other', name='externalplatform'), nullable=False),
    sa.Column('external_id', sa.String(), nullable=False),
    sa.Column('external_url', sa.String(), nullable=True),
    sa.Column('sync_notes', sa.Text(), nullable=True),
    sa.Column('last_synced', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['individual_id'], ['individuals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('facts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('individual_id', sa.UUID(), nullable=False),
    sa.Column('fact_type_id', sa.Integer(), nullable=False),
    sa.Column('fact_value', sa.String(), nullable=True),
    sa.Column('fact_date', sa.Date(), nullable=True),
    sa.Column('fact_place', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('confidence_level', sa.Enum('high', 'medium', 'low', 'questionable', 'certain', 'doubtful', 'speculative', name='confidencelevel'), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['fact_type_id'], ['fact_types.id'], ),
    sa.ForeignKeyConstraint(['individual_id'], ['individuals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relationships',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('individual1_id', sa.UUID(), nullable=False),
    sa.Column('individual2_id', sa.UUID(), nullable=False),
    sa.Column('relationship_type', sa.Enum('parent', 'child', 'spouse', 'partner', 'sibling', 'guardian', 'ward', 'other', name='relationshiptype'), nullable=False),
    sa.Column('relationship_start_date', sa.Date(), nullable=True),
    sa.Column('relationship_end_date', sa.Date(), nullable=True),
    sa.Column('relationship_notes', sa.String(), nullable=True),
    sa.Column('confidence_level', sa.Enum('high', 'medium', 'low', 'questionable', 'certain', 'doubtful', 'speculative', name='confidencelevel'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['individual1_id'], ['individuals.id'], ),
    sa.ForeignKeyConstraint(['individual2_id'], ['individuals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('research_notes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('individual_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('priority', sa.Enum('high', 'medium', 'low', name='notepriority'), nullable=True),
    sa.Column('status', sa.Enum('todo', 'in_progress', 'completed', 'blocked', name='notestatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['individual_id'], ['individuals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('source_collection_items',
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('collection_id', sa.UUID(), nullable=False),
    sa.Column('added_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('added_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['added_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['collection_id'], ['source_collections.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('source_id', 'collection_id')
    )
    op.create_table('source_reliability_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('reliability_status', sa.Enum('reliable', 'questionable', 'unreliable', 'deprecated', name='reliabilitystatus'), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('changed_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('changed_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['changed_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conflicting_facts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('fact1_id', sa.UUID(), nullable=False),
    sa.Column('fact2_id', sa.UUID(), nullable=False),
    sa.Column('conflict_description', sa.Text(), nullable=False),
    sa.Column('resolution_status', sa.Enum('unresolved', 'resolved', 'dismissed', name='resolutionstatus'), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('resolved_by_user_id', sa.UUID(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['fact1_id'], ['facts.id'], ),
    sa.ForeignKeyConstraint(['fact2_id'], ['facts.id'], ),
    sa.ForeignKeyConstraint(['resolved_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relationship_qualifiers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('relationship_id', sa.UUID(), nullable=False),
    sa.Column('qualifier', sa.Enum('natural', 'adoptive', 'biological', 'step', 'surrogate', 'legal', 'social', 'genetic', name='qualifier'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['relationship_id'], ['relationships.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('relationship_qualifiers')
    op.drop_table('conflicting_facts')
    op.drop_table('source_reliability_history')
    op.drop_table('source_collection_items')
    op.drop_table('research_notes')
    op.drop_table('relationships')
    op.drop_table('facts')
    op.drop_table('external_links')
    op.drop_table('citations')
    op.drop_table('sources')
    op.drop_table('source_collections')
    op.drop_table('individuals')
    op.drop_table('users')
    op.drop_table('source_types')
    op.drop_table('fact_types')
    # ### end Alembic commands ###
